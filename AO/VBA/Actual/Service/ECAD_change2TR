'Function List
    '---------------------------------------------------------------------------------------------------------
    Function Replace_symbols(ByVal txt As String) As String
        St$ = "~!@/\#$%^:?&*=|`;"""
        For f_i% = 1 To Len(St$)
            txt = Replace(txt, Mid(St$, f_i, 1), "_")
            txt = Replace(txt, Chr(10), "_")
        Next
        Replace_symbols = txt
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_VBA_Start() As String
    With Application
        .ScreenUpdating = False
        .EnableEvents = False
        .Calculation = xlCalculationManual
        '.DisplayPageBreaks = False
        .DisplayAlerts = False
    End With
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_VBA_End() As String
    With Application
        .ScreenUpdating = True
        .Calculation = xlCalculationAutomatic
        .EnableEvents = True
        .DisplayStatusBar = True
        .DisplayAlerts = True
    End With
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_CreateSh(cr_sh As String) As String
    For Each Sh In ThisWorkbook.Worksheets
        If Sh.Name = cr_sh Then
        chek_name = 1
        End If
    Next Sh
        If chek_name <> 1 Then
        Set Sh = Worksheets.Add()
        Sh.Name = cr_sh
        End If
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_openFile(ByRef patch As String, nm_sh As String) As String
    Dim result$
    If Dir(patch) = "" Then
        MsgBox ("FileNotFound")
    Else
        Workbooks.Open Filename:=patch, Notify:=False
        
        result = ActiveWorkbook.Name
        Sheets(nm_sh).Select
        ActiveSheet.AutoFilterMode = False
    End If
    fn_openFile = result
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_openFileCSV(ByRef patch As String)
    Dim result$
    If Dir(patch) = "" Then
        MsgBox ("FileNotFound")
    Else
        Workbooks.OpenText Filename:=patch, _
            Origin:=65001, StartRow:=1, DataType:=xlDelimited, TextQualifier:= _
            xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, Semicolon:=True, _
            Comma:=False, Space:=False, Other:=False, TrailingMinusNumbers:=True

        
    End If
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_quartal(month&) As String
    Dim result As String
    result = Empty
            Select Case month
            Case 1, 2, 3
            result = "1Q"
            Case 4, 5, 6
            result = "2Q"
            Case 7, 8, 9
            result = "3Q"
            Case 10, 11, 12
            result = "4Q"
        End Select
    fn_quartal = result
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_month_form_00(month As Integer) As String
    Dim result As String
    result = Empty

        If month < 10 Then
            result = "0" & f_q
        Else
            result = f_q
        End If

    fn_month_form_00 = result
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_patch_history_TR(brand As String, year As Integer, thisMonth As Integer, ver_month As String) As String
    Dim result As String
    result = Empty

        Select Case month
            Case this_month
            result = "p:\DPP\Business development\Book commercial\" & brand & "\Top Russia Total " & year & " " & brand & ".xlsm"
            Case Else
            result = "p:\DPP\Business development\Book commercial\" & brand & "\" & year & "\History " & year & "\Top Russia Total " & year & "." & ver_month & " " & brand & ".xlsm"
        End Select

    fn_patch_history_TR = result
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_lastRow() As Integer
    Dim result As Integer
    result = Empty
        With ActiveWorkbook.ActiveSheet.UsedRange
        result = .Row + .Rows.Count - 1
        End With
    fn_lastRow = result
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_lastColumn() As Integer
    Dim result As Integer
    result = Empty
        
        With ActiveWorkbook.ActiveSheet.UsedRange
        result = .Column + .Columns.Count - 1
        End With

    fn_lastColumn = result
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_clnt_type(in_data$, i&)
    Dim result
    Dim ar_type_clients(1 To 4, 1 To 12)
    Dim f_sl&

    '--array
        ar_type_clients(1, 1) = "салон"
        ar_type_clients(2, 1) = "salon"
        ar_type_clients(3, 1) = "salon"
        ar_type_clients(4, 1) = "single"

        ar_type_clients(1, 2) = "сеть салонов"
        ar_type_clients(2, 2) = "chain_salons"
        ar_type_clients(3, 2) = "salon"
        ar_type_clients(4, 2) = "chain"

        ar_type_clients(1, 3) = "ч/м"
        ar_type_clients(2, 3) = "hdres"
        ar_type_clients(3, 3) = "salon"
        ar_type_clients(4, 3) = "single"

        ar_type_clients(1, 4) = "сеть магазинов"
        ar_type_clients(2, 4) = "chain_shops"
        ar_type_clients(3, 4) = "shop"
        ar_type_clients(4, 4) = "chain"

        ar_type_clients(1, 5) = "магазин"
        ar_type_clients(2, 5) = "shop"
        ar_type_clients(3, 5) = "shop"
        ar_type_clients(4, 5) = "single"

        ar_type_clients(1, 6) = "салон-маг."
        ar_type_clients(2, 6) = "salon"
        ar_type_clients(3, 6) = "salon"
        ar_type_clients(4, 6) = "single"

        ar_type_clients(1, 7) = "(пусто)"
        ar_type_clients(2, 7) = "other"
        ar_type_clients(3, 7) = "other"
        ar_type_clients(4, 7) = "single"

        ar_type_clients(1, 8) = "школа"
        ar_type_clients(2, 8) = "school"
        ar_type_clients(3, 8) = "school"
        ar_type_clients(4, 8) = "single"

        ar_type_clients(1, 9) = "другое"
        ar_type_clients(2, 9) = "other"
        ar_type_clients(3, 9) = "other"
        ar_type_clients(4, 9) = "single"

        ar_type_clients(1, 10) = "нейл-бар"
        ar_type_clients(2, 10) = "nails_bar"
        ar_type_clients(3, 10) = "nails"
        ar_type_clients(4, 10) = "single"

        ar_type_clients(1, 11) = "сеть нейл-баров"
        ar_type_clients(2, 11) = "chain_nails"
        ar_type_clients(3, 11) = "nails"
        ar_type_clients(4, 11) = "chain"

        ar_type_clients(1, 12) = "e-commerce"
        ar_type_clients(2, 12) = "e-commerce"
        ar_type_clients(3, 12) = "e-commerce"
        ar_type_clients(4, 12) = "single"

    For f_sl = 1 To 12
        
    If StrComp(ar_type_clients(1, f_sl), LCase(in_data), vbTextCompare) Then
        
        result = ar_type_clients(i, f_sl)
        Exit For
        Else
        result = Empty
    End If
    Next f_sl

    fn_clnt_type = result
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_mreg_ext$(in_data_mreg$, in_data_reg$)
    Dim result$
    Dim extPos&
    textPos = 0
    If LCase(in_data_mreg) = LCase("Moscou GR") Then
        textPos = InStr(in_data_reg, "MSK")
        textPos = InStr(in_data_reg, "Moscou") + textPos
            If textPos > 0 Then
            result = "Moscou"
            Else
            result = "GR"
            End If
    End If
    fn_mreg_ext = result
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_mreg_lat(in_data_mreg As String) As String
    Dim result$
    Dim f_mr&
    Dim ar_nmMregEN(), ar_nmMregLT()

    ar_nmMregEN = Array("MOSCOW", "GR", "NORTHWEST", "CENTER", "VOLGA", "SOUTH", "URAL", "SIBERIA", "FAR EAST")
    ar_nmMregLT = Array("Moscou", "GR", "Nord-Ouest", "Centre", "Volga-Centre", "Sud", "Oural", "Siberie", "EO")

    For f_mr = 0 To UBound(ar_nmMregLT)
    If ar_nmMregLT(f_mr) = in_data_mreg Then
    result = ar_nmMregEN(f_mr)
    Exit For
    End If
    Next f_mr

    fn_mreg_lat = result

    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_salon_name$(in_sln_nm$, in_sln_addres$, in_city$)
    Dim result$

    result = Trim(fn_Replace_symbols(Left(in_sln_nm, 30) & ". " & Left(in_sln_addres, 50) & " " & Left(in_city, 50)))

    fn_salon_name = result
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_mont_num$(in_data$)
    Dim result&
    Dim f_m&, num_month&

    ar_nm_month_qnc_rus = Array("январь", "февраль", "март", "апрель", "май", "июнь", "июль", "август", "сентябрь", "октябрь", "ноябрь", "декабрь")
    result = 0
        For f_m = 0 To 11
        If ar_nm_month_qnc_rus(f_m) = in_data Then
        result = f_m + 1
        Exit For
        End If
        Next f_m
    
    fn_mont_num = result
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_year_cnq(in_act_year&, in_data&, i&) As Variant
    Dim result1&, result2$
        
        If Len(in_data) = 4 Then result1 = in_data Else result1 = 2008
        
            Select Case result1
                Case in_act_year
                    result2 = "TY"
                Case in_act_year - 1
                    result2 = "PY"
                Case Else
                    result2 = "PPY"
            End Select
    
    Select Case i
    Case 1
        fn_year_cnq = result1
    Case 2
        fn_year_cnq = result2
    Case Else
        fn_year_cnq = Empty
    End Select
    End Function
    '---------------------------------------------------------------------------------------------------------

    Function fn_mag(in_min_price As Long, in_max_price As Long, in_place As Long, mag_type As String) As Variant

    Dim result As Variant
    Dim mag_avg_price&
            
    If IsNumeric(in_min_price) Or IsNumeric(in_max_price) Then
        mag_avg_price = Application.WorksheetFunction.Average(in_min_price, in_max_price)
    Else
        mag_avg_price = in_min_price + in_max_price
    End If

    Select Case mag_type
        Case "avg_price"
            result = mag_avg_price

        Case "hair"
            Select Case mag_avg_price
                Case 100 To 799
                    result = "D"
                Case 800 To 1199
                    result = "C"
                Case 1200 To 2000
                    result = "B"
                Case Is > 2000
                    result = "A"
                Case Else
                    result = Empty
            End Select
        
        Case "nail"
            Select Case mag_avg_price
                Case 10 To 319
                    result = "D"
                Case 320 To 479
                    result = "C"
                Case 480 To 799
                    result = "B"
                Case Is > 800
                    result = "A"
                Case Else
                    result = Empty
            End Select
        
        Case "skin"
            Select Case mag_avg_price
                Case 100 To 799
                    result = "D"
                Case 800 To 1199
                    result = "C"
                Case 1200 To 2000
                    result = "B"
                Case Is > 2000
                    result = "A"
                Case Else
                    result = Empty
            End Select

        Case "place"
            If IsNumeric(in_place) Then
            in_place = Round(in_place, 0)
            End If
            Select Case in_place
                Case 1 To 2
                result = "1"
                Case 3 To 4
                result = "2"
                Case Is > 4
                result = "3"
                Case Else
                result = Empty
            End Select

        End Select
        
    fn_mag = result
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_type_business$(in_brand$)
    Dim result$
    Select Case in_brand
            Case "LP", "MX", "KR", "RD"
            result = "Hair"
            Case "ES"
            result = "Nails"
            Case "DE", "CR"
            result = "Skin"
    End Select
    fn_type_business = result
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_type_active_DN$(in_data&)
    Dim result$

    Select Case in_data
        Case 1
            result = "Active"
        Case 0
            result = "Closed"
    End Select
    fn_type_active_DN = result
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_rnd_num&(in_data)
    Dim result&
    If IsNumeric(in_data) And Len(in_data) > 0 Then
        result = Round(in_data, 0)
    Else
        result = 0
    End If
    fn_rnd_num = result
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_num2num0&(in_data)
    Dim result&
    If Len(in_data) > 0 And IsNumeric(in_data) Then
    result = in_data
    Else
    result = 0
    End If
    fn_num2num0 = result
    End Function
    '---------------------------------------------------------------------------------------------------------
    Function fn_num2numNull&(in_data)
    Dim result&
    If Len(in_data) > 0 Then
    result = in_data
    Else
    result = Null
    End If
    fn_num2num0 = result
    End Function

'---------------------------------------------------------------------------------------------------------
'---------------------------------------------------------------------------------------------------------

Sub edu2TR()
Dim FilePatch As String
Dim ar_Data_EDU(), ar_Data_TR(), ar_JoinData()
Dim xxx As Integer
Dim patchTR$, nm_brand$, nm_Mreg$, nm_Sector$, nm_Mreg_ext$, nm_month_qnc$, nm_business$, nm_Salon$, nm_Salon_addr$, nm_Salon_city$, type_sln_rus$
Dim mag_min_price&, mag_max_price&, mag_hd_place&, f_year&, cd_year_qnc&, num_month&, sts_dn_cln&
Dim min_price As Variant

fn_VBA_Start

ar_brand = Array("MX", "LP", "KR", "RD", "ES")
num_ar_brand = UBound(ar_brand)
f_year = 2016
in_data_EDU = "Educated"
yyy = 1

EDUDATA = ActiveWorkbook.Name
in_edudata = "in_data"
fn_CreateSh (in_edudata)

For f_brand = 0 To num_ar_brand
nm_brand = ar_brand(f_brand)

patchTR = "p:\DPP\Business development\Book commercial\" & nm_brand & "\Top Russia Total " & f_year & " " & nm_brand & ".xlsm"
actTR = fn_openFile(patchTR, nm_brand)

tr_LastRow = fn_lastRow
tr_count_row = tr_LastRow - 3
ReDim ar_Data_TR(1 To tr_count_row, 1 To 100)
 
Dim dic_idECAD: Set dic_idECAD = CreateObject("Scripting.Dictionary")
Dim dic_City: Set dic_City = CreateObject("Scripting.Dictionary")
Dim dic_Sec: Set dic_Sec = CreateObject("Scripting.Dictionary")

start_row = 4

iii = 0
For f_i = start_row To tr_LastRow
nm_Mreg = Cells(f_i, 4)

Application.StatusBar = actTR & " row: " & iii & " in: " & tr_LastRow

If InStr(LCase(nm_Mreg), LCase("E-commerce")) = 0 Then
iii = iii + 1
num_clm = 0


    nm_Sector = Cells(f_i, 6)
    nm_Mreg_ext = fn_mreg_ext(nm_Mreg, nm_Sector)
    nm_Mreg_LT = fn_mreg_lat(nm_Mreg_ext)
    nm_REG = Cells(f_i, 5)
    nm_FLSM = Cells(f_i, 165)
    nm_SREP = Cells(f_i, 7)
    nm_Salon = Cells(f_i, 9)
    nm_Salon_addr = Cells(f_i, 12)
    nm_Salon_city = Cells(f_i, 11)
    nm_month_qnc = Cells(f_i, 64)
    cd_month_qnc = fn_mont_num(nm_month_qnc)
    cd_year_qnc = fn_num2num0(Cells(f_i, 65))
    type_sln_rus = Cells(f_i, 18)
    nm_club_type = Cells(f_i, 40)
    nm_chain = Cells(f_i, 19)
    
    min_price = Cells(f_i, 23)
    
    
    mag_min_price = fn_rnd_num(min_price)
    mag_max_price = fn_rnd_num(Cells(f_i, 25))
    mag_hd_place = fn_rnd_num(Cells(f_i, 27))
    cnt_AVG_HD = fn_rnd_num(Cells(f_i, 28))
    nm_business = fn_type_business(nm_brand)

    vl_mag = fn_mag(mag_min_price, mag_max_price, mag_hd_place, nm_business) & fn_mag(mag_min_price, mag_max_price, mag_hd_place, "place")
    If Len(vl_mag) <> 2 Then vl_mag = Null

    sts_dn_cln = Cells(f_i, 8)
    id_ECAD = Cells(f_i, 29)
    nm_Partners = Cells(f_i, 167)
    cd_Partner = Cells(f_i, 173)
    nm_SLN_ADR_CITY = fn_salon_name(nm_Salon, nm_Salon_addr, nm_Salon_city)


 
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = nm_brand
    If iii = 1 Then ar_Data_TR(1, num_clm) = "brand"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = nm_Mreg
    If iii = 1 Then ar_Data_TR(1, num_clm) = "mreg"
    clm_nm_mreg = num_clm
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = nm_Mreg_LT
    If iii = 1 Then ar_Data_TR(1, num_clm) = "mreg_EXT"
    clm_nm_mreg_ext = num_clm
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = nm_REG
    If iii = 1 Then ar_Data_TR(1, num_clm) = "REG"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = nm_FLSM
    If iii = 1 Then ar_Data_TR(1, num_clm) = "FLSM"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = nm_Sector
    If iii = 1 Then ar_Data_TR(1, num_clm) = "SEC"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = nm_SREP
    If iii = 1 Then ar_Data_TR(1, num_clm) = "SREP"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = nm_SLN_ADR_CITY
    If iii = 1 Then ar_Data_TR(1, num_clm) = "salon"
    clm_nm_salon = num_clm
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = nm_Salon_city
    If iii = 1 Then ar_Data_TR(1, num_clm) = "city"
    clm_nm_city = num_clm
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = type_sln_rus
    If iii = 1 Then ar_Data_TR(1, num_clm) = "type_SLN"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = fn_clnt_type(type_sln_rus, 2)
    If iii = 1 Then ar_Data_TR(1, num_clm) = "salon_type_eng"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = fn_clnt_type(type_sln_rus, 3)
    If iii = 1 Then ar_Data_TR(1, num_clm) = "salon_type_short_eng"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = fn_clnt_type(type_sln_rus, 4)
    If iii = 1 Then ar_Data_TR(1, num_clm) = "salon_type_chain_eng"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = nm_club_type
    If iii = 1 Then ar_Data_TR(1, num_clm) = "type_CLUB"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = nm_chain
    If iii = 1 Then ar_Data_TR(1, num_clm) = "chain_name"
           
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = cd_month_qnc
    If iii = 1 Then ar_Data_TR(1, num_clm) = "CNQ_month_num"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = fn_year_cnq(f_year, cd_year_qnc, 2)
    If iii = 1 Then ar_Data_TR(1, num_clm) = "CNQ_year"
        
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = fn_quartal(num_month)
    If iii = 1 Then ar_Data_TR(1, num_clm) = "cnq_Quarter"
        
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = vl_mag
    If iii = 1 Then ar_Data_TR(1, num_clm) = "type_MAG"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = fn_type_active_DN(sts_dn_cln)
    If iii = 1 Then ar_Data_TR(1, num_clm) = "status_DN_name"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = id_ECAD
    If iii = 1 Then ar_Data_TR(1, num_clm) = "EDU_id_ECAD"
    clm_id_ecad = num_clm
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = mag_hd_place
    If iii = 1 Then ar_Data_TR(1, num_clm) = "_place_HD"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = cnt_AVG_HD
    If iii = 1 Then ar_Data_TR(1, num_clm) = "cnt_AVG_HD"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = nm_Partners
    If iii = 1 Then ar_Data_TR(1, num_clm) = "nm_partner"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = cd_Partner
    If iii = 1 Then ar_Data_TR(1, num_clm) = "cd_partner"
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = Empty
    If iii = 1 Then ar_Data_TR(1, num_clm) = "status_link"
    status_link = num_clm
    
    num_clm = num_clm + 1
    ar_Data_TR(iii, num_clm) = Empty
    If iii = 1 Then ar_Data_TR(1, num_clm) = "status_educated"
    num_clm_status_educated = num_clm

    If Not dic_idECAD.Exists(id_ECAD) Then
    dic_idECAD.Add id_ECAD, id_ECAD
    End If
    
    If Not dic_City.Exists(nm_Salon_city) And Not IsEmpty(nm_Salon_city) Then
    dic_City.Add nm_Salon_city, nm_Mreg
    End If
    
    If Not dic_Sec.Exists(nm_Sector) And Not IsEmpty(nm_Sector) Then
    dic_Sec.Add nm_Sector, nm_Mreg
    End If

End If
Next f_i

file_name = "salons_educated_" & nm_brand
FilePatch = "p:\DPP\Business development\Statistics Service\EDU\Base\" & file_name & ".csv"
Application.StatusBar = "Open file " & FilePatch
fn_openFileCSV (FilePatch)
actEDUBook = file_name
Application.StatusBar = "Work file is: " & actEDUBook

edu_LastRow = ActiveSheet.UsedRange.Row + ActiveSheet.UsedRange.Rows.Count - 1
edu_LastColumn = ActiveSheet.UsedRange.Column + ActiveSheet.UsedRange.Columns.Count - 1


ReDim ar_Data_EDU(1 To edu_LastRow, 1 To edu_LastColumn)

Dim dic_eduID: Set dic_eduID = CreateObject("Scripting.Dictionary")
dic_eduID.RemoveAll

For f_rw = 1 To edu_LastRow
    For f_clm = 1 To edu_LastColumn
        If f_clm = 1 Then
            edu_id = Cells(f_rw, 1)
                If Not dic_eduID.Exists(edu_id) Then
                dic_eduID.Add edu_id, f_rw
                End If
        End If
    
    If Cells(f_rw, f_clm).Value = 0 Then
    vl_c = Empty
    Else
    vl_c = Cells(f_rw, f_clm).Value
    End If
    ar_Data_EDU(f_rw, f_clm) = vl_c
    Next f_clm

Application.StatusBar = actEDUBook & " row: " & f_rw & " in: " & edu_LastRow & " clmn: " & f_clm & " in: " & edu_LastColumn
Next f_rw

Application.StatusBar = "Close file: " & actEDUBook
Workbooks(actEDUBook).Close


'--------------------------------------------

Application.StatusBar = "Join ECAD & TR "
ReDim ar_JoinData(1 To UBound(ar_Data_TR) + UBound(ar_Data_EDU), 1 To num_clm + edu_LastColumn)

iii = 1
end_array_TR = UBound(ar_Data_TR)
For f_tr_rw = 1 To end_array_TR
Application.StatusBar = "Work Array TR " & f_tr_clm & "to " & end_array_TR

    For f_tr_clm = 1 To num_clm
        ar_JoinData(iii, f_tr_clm) = ar_Data_TR(f_tr_rw, f_tr_clm)
    Next f_tr_clm
        tr_key = Empty
        tr_key = ar_Data_TR(f_tr_rw, clm_id_ecad)
            If dic_eduID.Exists(tr_key) Then
                ar_JoinData(iii, status_link) = "LINK"
                rw_edu_dataset = dic_eduID.Item(tr_key)
                xxx = 1
                strt_jd_edu_clmn = num_clm
                    For f_edu_clm = strt_jd_edu_clmn To strt_jd_edu_clmn + edu_LastColumn - 1
                        ar_JoinData(iii, f_edu_clm) = ar_Data_EDU(rw_edu_dataset, xxx)
                        '---------------------------------------------------------------------------------------------------------
                        If ar_Data_EDU(rw_edu_dataset, 7) <> 0 Then
                        status_educated = "edu_TY"
                        Else
                            If ar_Data_EDU(rw_edu_dataset, 6) <> 0 Then
                            status_educated = "edu_PY"
                            Else
                                If ar_Data_EDU(rw_edu_dataset, 5) <> 0 Then
                                status_educated = "edu_ALLTIME"
                                Else
                               
                                status_educated = Empty
                                End If
                                End If
                                End If
                        '---------------------------------------------------------------------------------------------------------
                        xxx = xxx + 1
                    Next f_edu_clm
                    Else
                    ar_JoinData(iii, status_link) = "UNLINK"
                    status_educated = Empty
            End If
            ar_JoinData(iii, num_clm_status_educated) = status_educated
iii = iii + 1

Next f_tr_rw
'---------------------------------------------------------------------------------------------------------
end_ecad_row = UBound(ar_Data_EDU)
For f_edu_rw = 1 To end_ecad_row
Application.StatusBar = "Work Array ECAD " & f_edu_rw & "to " & end_ecad_row

    ecad_key = Empty
    ecad_key = ar_Data_EDU(f_edu_rw, 1)
    If Not dic_idECAD.Exists(ecad_key) And Not IsEmpty(ecad_key) Then
    
            
                If dic_Sec.Exists(ar_Data_EDU(f_edu_rw, 3)) Then
                ar_JoinData(iii, clm_nm_mreg_ext) = dic_Sec.Item(ar_Data_EDU(f_edu_rw, 3))
                Else
                    If dic_City.Exists(ar_Data_EDU(f_edu_rw, 22)) Then
                    ar_JoinData(iii, clm_nm_mreg_ext) = dic_City.Item(ar_Data_EDU(f_edu_rw, 22))
                
                    End If
                End If
                   
        ar_JoinData(iii, status_link) = "UNLINK"
        ar_JoinData(iii, 1) = nm_brand
        ar_JoinData(iii, clm_nm_salon) = ar_Data_EDU(f_edu_rw, 2)
        
   '---------------------------------------------------------------------------------------------------------
                        If ar_Data_EDU(f_edu_rw, 7) <> 0 Then
                        status_educated = "edu_TY"
                        Else
                            If ar_Data_EDU(f_edu_rw, 6) <> 0 Then
                            status_educated = "edu_PY"
                            Else
                                If ar_Data_EDU(f_edu_rw, 5) <> 0 Then
                                status_educated = "edu_ALLTIME"
                                Else
                                status_educated = Empty
                                End If
                                End If
                                End If
   '---------------------------------------------------------------------------------------------------------
        ar_JoinData(iii, num_clm_status_educated) = status_educated
        rw_edu_dataset = dic_eduID.Item(ecad_key)
        xxx = 1
        strt_jd_edu_clmn = num_clm
            For f_edu_clm = strt_jd_edu_clmn To strt_jd_edu_clmn + edu_LastColumn - 1
                
                If f_edu_rw = 1 Then
                ar_JoinData(1, f_edu_clm) = ar_Data_EDU(rw_edu_dataset, xxx)
                Else
                ar_JoinData(iii, f_edu_clm) = ar_Data_EDU(rw_edu_dataset, xxx)
                End If
                xxx = xxx + 1
                
            Next f_edu_clm
            If f_edu_rw <> 1 Then iii = iii + 1
            End If
Next f_edu_rw


Application.StatusBar = "TR activate"
Workbooks(actTR).Activate
Sheets(in_data_EDU).Select
Application.StatusBar = "TR fill EDUCATED"
ActiveSheet.UsedRange.Cells.ClearContents
ActiveSheet.Cells(1, 1).Resize(iii - start_row, num_clm + edu_LastColumn) = ar_JoinData
Cells(1, 1).Select
Selection.AutoFilter

'Calculate

Sheets(nm_brand).Select
Application.StatusBar = "TR Save"
Workbooks(actTR).Save
Workbooks(actTR).Close

full_row = iii + full_row

Workbooks(EDUDATA).Activate
Sheets(in_edudata).Select

Select Case f_brand
Case 0
ActiveSheet.UsedRange.Cells.ClearContents
strt_jd_rw = 1
Case Else
strt_jd_rw = 2
End Select


For f_rw_jd = strt_jd_rw To iii - 1

    For f_clm_jd = 1 To (num_clm + edu_LastColumn)
    Cells(yyy, f_clm_jd) = ar_JoinData(f_rw_jd, f_clm_jd)
    Next f_clm_jd
yyy = yyy + 1
Next f_rw_jd

Next f_brand

fn_VBA_End
    
End Sub

