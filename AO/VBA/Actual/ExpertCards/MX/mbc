Function Replace_symbols(ByVal txt As String) As String
    St$ = "~!@/\#$%^:?&*=|`;"""
    For i% = 1 To Len(St$)
        txt = Replace(txt, Mid(St$, i, 1), "_")
        txt = Replace(txt, Chr(10), "_")
    Next
    Replace_symbols = txt
End Function


Sub data_TR()

Dim brand, ar_Colmn(), patchTR, nm_FLSM, nm_Mreg, nm_SREP, type_CLNT As String
Dim comp_colo, comp_rev, st_cmp, nmFile, disk, map_search, actTR, NF As String
Dim num_ar_Brand, num_ar_Colmn, ar_LastRow(), b, iii, i, nc, ee, cdMonth, cdYear, CA1 As Integer
Dim eee, num_colums, CA, Q1, Q2, Q3, Q4, a, z, dogovor, club_2015, st_pot_club, clnt_err, st_club, f As Integer
Dim Type_bonus As Double
Dim in_data, Sh As Worksheet
Dim ar_Data(), ar_CA_PART_VAL(), ar_nmHead(150), ar_nmAVG_Order()
Dim discount, koef As Double
  
nm_brand = "MX"
NF = ActiveWorkbook.Name
patchTR = "p:\DPP\Business development\Book commercial\" & nm_brand & "\Top Russia Total 2015 " & nm_brand & ".xlsm"
act_month = InputBox("Month number")
act_month = CInt(act_month)
  
   
With Application
.ScreenUpdating = False
.EnableEvents = False
.Calculation = xlCalculationManual
'.DisplayPageBreaks = False
.DisplayAlerts = False
End With


'colums CA PARTN VAL for LTM
'---------------------------------------------------------------------------------------------------------
ar_PYPer_PART_VAL = Array(0, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90)
ar_TYPer_PART_VAL = Array(0, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77)
ar_CA_PART_VAL = Array(0, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90)

'colums CA LOREAL VAL
str_PYper_LOR_VAL = 106
str_TYper_LOR_VAL = 93

'colums CA Partners VAL
str_PYper_PART_VAL = 79
str_TYper_PART_VAL = 66


ar_nm_month = Array("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")

ar_nmMregEN = Array("MOSCOW", "GR", "NORTHWEST", "CENTER", "VOLGA", "SOUTH", "URAL", "SIBERIA", "FAR EAST")
ar_nmMregLT = Array("Moscou", "GR", "Nord-Ouest", "Centre", "Volga-Centre", "Sud", "Oural", "Siberie", "EO")

ar_nmAVG_Order = Array(0, 2.5, 5, 10, 15, 20, 25, 30, 50, 60, 70, 100000)
'---------------------------------------------------------------------------------------------------------




'check Sheets and if not - add
'---------------------------------------------------------------------------------------------------------
in_data = "MBC"
For Each Sh In ThisWorkbook.Worksheets
If Sh.Name = in_data Then
chek_name = 1
End If
Next Sh

If chek_name <> 1 Then
Set Sh = Worksheets.Add()
Sh.Name = in_data
End If

'---------------------------------------------------------------------------------------------------------

Workbooks.Open Filename:=patchTR, Notify:=False
actTR = ActiveWorkbook.Name
Sheets(nm_brand).Select
ActiveSheet.AutoFilterMode = False

num_LastRow = ActiveSheet.UsedRange.Row + ActiveSheet.UsedRange.Rows.Count - 1
ReDim ar_Data(num_LastRow - 4, 150)
'-----------------------------------------------------------
  
    iii = 0

   
    For i = 4 To num_LastRow
        
        
    num_colums = 0
    ar_Data(iii, num_colums) = Cells(i, 1)
    ar_nmHead(num_colums) = "rowTR"
    
    num_colums = num_colums + 1
    ar_Data(iii, num_colums) = Cells(i, 2) 'cd_loreal
    ar_nmHead(num_colums) = "unvCD"
    
    num_colums = num_colums + 1
    nm_Mreg = Right(Cells(i, 4), Len(Cells(i, 4).Value) - 3)
    ar_Data(iii, num_colums) = nm_Mreg
    ar_nmHead(num_colums) = "mreg"
   
'Mreg LT-> EN + split Moscou GR
'---------------------------------------------------------------------------------------------------------
            
    num_colums = num_colums + 1
    textPos = 0
    
    If nm_Mreg = "Moscou GR" Then
    nm_reg = Cells(i, 5)
    textPos = InStr(nm_reg, "MSK")
    textPos = InStr(nm_reg, "Moscou") + textPos
        If textPos > 0 Then
        nm_Mreg = "Moscou"
        Else
        nm_Mreg = "GR"

        End If
    End If
    
    For f_mr = 0 To UBound(ar_nmMregLT)
    If ar_nmMregLT(f_mr) = nm_Mreg Then
    nm_Mreg = ar_nmMregEN(f_mr)
    End If
    Next f_mr
    
    ar_Data(iii, num_colums) = nm_Mreg
    ar_nmHead(num_colums) = "mreg_EXT"
 
 '---------------------------------------------------------------------------------------------------------
     
    num_colums = num_colums + 1
    ar_Data(iii, num_colums) = Cells(i, 5)
    ar_nmHead(num_colums) = "REG"
    
    num_colums = num_colums + 1
    ar_Data(iii, num_colums) = Cells(i, 165)
    ar_nmHead(num_colums) = "FLSM"
    
    num_colums = num_colums + 1
    ar_Data(iii, num_colums) = Cells(i, 6)
    ar_nmHead(num_colums) = "SEC"
    
    num_colums = num_colums + 1
    ar_Data(iii, num_colums) = Cells(i, 7)
    ar_nmHead(num_colums) = "SREP"
    
    num_colums = num_colums + 1
    ar_Data(iii, num_colums) = Cells(i, 10)
    ar_nmHead(num_colums) = "own_name"  
    
    num_colums = num_colums + 1
    type_CLNT = Cells(i, 153)
    ar_Data(iii, num_colums) = type_CLNT
    clm_type_clnt = num_colums
    ar_nmHead(num_colums) = "type_clnt"

    num_colums = num_colums + 1
    ar_Data(iii, num_colums) = Replace_symbols(Trim(Left(Cells(i, 9), 30)) & ". " & Trim(Left(Cells(i, 12), 50) & " " & Left(Cells(i, 13), 30)) & " " & Cells(i, 11))
    ar_nmHead(num_colums) = "salons"
    
    num_colums = num_colums + 1
    ar_Data(iii, num_colums) = Replace(Cells(i, 14), Chr(10), " ")
    ar_nmHead(num_colums) = "cont_email"
        
    num_colums = num_colums + 1
    ar_Data(iii, num_colums) = Replace(Cells(i, 15), Chr(10), " ")
    ar_nmHead(num_colums) = "cont_phone"
        
    num_colums = num_colums + 1
    ar_Data(iii, num_colums) = Replace(Cells(i, 16), Chr(10), " ")
    ar_nmHead(num_colums) = "cont_name"
        
    num_colums = num_colums + 1
    ar_Data(iii, num_colums) = Replace(Cells(i, 20), Chr(10), " ")
    ar_nmHead(num_colums) = "sln_phone"
        
    num_colums = num_colums + 1
    ar_Data(iii, num_colums) = Replace(Cells(i, 21), Chr(10), " ")
    ar_nmHead(num_colums) = "sln_mail"
       
    num_colums = num_colums + 1
    ar_Data(iii, num_colums) = Replace(Cells(i, 22), Chr(10), " ")
    ar_nmHead(num_colums) = "sln_site"
    
    num_colums = num_colums + 1
        If Cells(i, 161) <> "" Then cdMonth = Cells(i, 161) Else cdMonth = 1
        If Len(Cells(i, 65)) = 4 Then cdYear = Cells(i, 65) Else cdYear = 2008
    
    ar_Data(iii, num_colums) = cdMonth & "-" & cdYear
    ar_nmHead(num_colums) = "date_CNQ"

'----------------------------------------------------------------------------------------------------------
    num_colums = num_colums + 1
    clm_status_DN = num_colums
    If Cells(i, 8) = 1 Then
    st_cln_base = "Act"

    Else
    st_cln_base = "Cls"

    End If
    ar_Data(iii, num_colums) = st_cln_base
    ar_nmHead(num_colums) = "status_DN"
'----------------------------------------------------------------------------------------------------------
'---------------------------------------------------------------------------------------------------------
'   calculate LTM AVG CA & FrqRate
'---------------------------------------------------------------------------------------------------------
    sumCA12M = 0
    frqOrder = 0
    
    
    For iq = act_month To 11
    
    
        If IsNumeric(Cells(i, ar_PYPer_PART_VAL(iq))) Then
        CA = Cells(i, ar_PYPer_PART_VAL(iq))
        Else
        CA = 0
        End If
        
        sumCA12M = sumCA12M + CA
        If Cells(i, ar_PYPer_PART_VAL(iq)) <> "" And Cells(i, ar_PYPer_PART_VAL(iq)) > 0 Then
        frqOrder = frqOrder + 1
        End If
    
    Next iq
    
    For iw = 1 To act_month
    
    If IsNumeric(Cells(i, ar_TYPer_PART_VAL(iw))) Then
        CA = Cells(i, ar_TYPer_PART_VAL(iw))
        Else
        CA = 0
        End If
    
    sumCA12M = sumCA12M + CA
        If Cells(i, ar_TYPer_PART_VAL(iw)) <> "" And Cells(i, ar_TYPer_PART_VAL(iw)) > 0 Then
        frqOrder = frqOrder + 1
        End If
    
    Next iw
            
        If sumCA12M <> 0 Then
        AVG_CA_LTM = Round(sumCA12M / 12 / 1000, 1)
        Else
        AVG_CA_LTM = ""
        End If
'---------------------------------------------------------------------------------------------------------
    
    num_colums = num_colums + 1
    ar_Data(iii, num_colums) = AVG_CA_LTM
    clm_CA_AVG_LTM = num_colums
    ar_nmHead(num_colums) = "CA_AVG_LTM"
  
    num_colums = num_colums + 1
    ar_Data(iii, num_colums) = frqOrder & "\12" '
    ar_nmHead(num_colums) = "frq_order_LTM"
    
    
    num_colums = num_colums + 1
        ev_ca = Cells(i, 92)

        If IsNumeric(ev_ca) Then
        ev_ca = Round(ev_ca, 2)

        Else
        ev_ca = Null
        End If
    ar_Data(iii, num_colums) = ev_ca
    ar_nmHead(num_colums) = "CA_ev"
    
    num_colums = num_colums + 1
    
    CA_PYTD = 0
    CA_TYTD = 0
    val_prtn_PY = 0
    val_prtn_TY = 0
    For f_b = 0 To act_month - 1
    val_prtn_PY = Cells(i, str_PYper_PART_VAL + f_b)
    val_prtn_TY = Cells(i, str_TYper_PART_VAL + f_b)
        If Not IsNumeric(val_prtn_PY) Then val_prtn_PY = 0
        If Not IsNumeric(val_prtn_TY) Then val_prtn_TY = 0
        
    CA_PYTD = CA_PYTD + val_prtn_PY
    CA_TYTD = CA_TYTD + val_prtn_TY
    Next f_b
    
    ar_Data(iii, num_colums) = (CA_TYTD - CA_PYTD) / 1000
    ar_nmHead(num_colums) = "CA_GRWT"

'----------------------------------------------------------------------------------------------------------
    
    num_colums = num_colums + 1
    ar_Data(iii, num_colums) = Cells(i, 29)
    ar_nmHead(num_colums) = "EDU_id_ECAD"
    
    num_colums = num_colums + 1
    clm_status_edu_alltime = num_colums
    EDU_ALLTIME = Cells(i, 30)
        If IsNumeric(EDU_ALLTIME) And Cells(i, 30) <> 0 Then
        EDU_ALLTIME = Round(Cells(i, 30), 0)
        Else
        EDU_ALLTIME = ""
        End If
    ar_Data(iii, num_colums) = EDU_ALLTIME
    clm_EDU_ALLTIME = num_colums
    ar_nmHead(num_colums) = "EDU_ALLTIME"
    
    num_colums = num_colums + 1
    clm_status_edu_PY = num_colums
    EDU_PY = Cells(i, 31)
        If IsNumeric(EDU_PY) And Cells(i, 31) <> 0 Then
        EDU_PY = Round(Cells(i, 31), 0)
        Else
        EDU_PY = ""
        End If
    ar_Data(iii, num_colums) = EDU_PY
    ar_nmHead(num_colums) = "EDU_PY"
    
    num_colums = num_colums + 1
    clm_status_edu_TY = num_colums
    EDU_TY = Cells(i, 32)
        If IsNumeric(EDU_TY) And Cells(i, 32) <> 0 Then
        EDU_TY = Round(Cells(i, 32), 0)
        Else
        EDU_TY = ""
        End If
    ar_Data(iii, num_colums) = EDU_TY
    ar_nmHead(num_colums) = "EDU_TY"
    
'----------------------------------------------------------------------------------------------------------
    
    
    num_colums = num_colums + 1
    dogovor = Cells(i, 40)
    ar_Data(iii, num_colums) = dogovor 'dogovor
    ar_nmHead(num_colums) = "validated"
    
    num_colums = num_colums + 1
    club_2015 = Cells(i, 42)
    ar_Data(iii, num_colums) = club_2015 'exper2015
    clm_MBC_Status = num_colums
    ar_nmHead(num_colums) = "MBC"
        
    num_colums = num_colums + 1
    club_2014 = Cells(i, 160)
    ar_Data(iii, num_colums) = club_2014 'expert2014
    ar_nmHead(num_colums) = "MAG"

    
'Calculate CA and bonus
'---------------------------------------------------------------------------------------------------------
   q_m_c = 0
    For f_q = 0 To 3
    
    num_colums = num_colums + 1
    m_val_q = 0
    m_val = 0
    
        For f_m = 0 To 2
        clm_m = str_PYper_PART_VAL + q_m_c
        m_val = Cells(i, clm_m)
        If Not IsNumeric(m_val) Then m_val = 0
            
        m_val_q = m_val_q + m_val
        
        q_m_c = q_m_c + 1
        
        Next f_m
        
        If m_val_q = 0 Then
        m_val_q = Null

        Else
        m_val_q = m_val_q / 1000
        End If
           
    ar_Data(iii, num_colums) = m_val_q
    ar_nmHead(num_colums) = "CA_PY_Q" & f_q + 1
    
    Next f_q
    
    
   q_m_c = 0
    For f_q = 0 To 3
    num_colums = num_colums + 1
    m_val_q = 0
    m_val = 0
    
        For f_m = 0 To 2
        clm_m = str_TYper_PART_VAL + q_m_c
        m_val = Cells(i, clm_m)
        If Not IsNumeric(m_val) Then m_val = 0
            
        m_val_q = m_val_q + m_val
        
        q_m_c = q_m_c + 1
        
        Next f_m
        
        If m_val_q = 0 Then
        m_val_q = Null

        Else
        m_val_q = m_val_q / 1000
        End If
           
    ar_Data(iii, num_colums) = m_val_q
    ar_nmHead(num_colums) = "CA_TY_Q" & f_q + 1
    Next f_q
    
   
    

'check salon expert
'---------------------------------------------------------------------------------------------------------
If dogovor = 1 Then
st_club = 1
Else
st_club = 0
End If
'---------------------------------------------------------------------------------------------------------
  
    
'check potential salon expert
'---------------------------------------------------------------------------------------------------------
st_pot_club = 0
If dogovor = 1 Then st_pot_club = st_pot_club + 1
If club_2015 = 1 Then st_pot_club = st_pot_club + 1
If club_2014 = 1 Then st_pot_club = st_pot_club + 1
If IsNumeric(AVG_CA_LTM) And AVG_CA_LTM > 15 Then st_pot_club = st_pot_club + 1

If type_CLNT = "shop" Or type_CLNT = "other" Then ' restrict shops from array
clnt_err = 1
Else
clnt_err = 0
End If

If Not IsEmpty(club_2015) Then
iii = iii + 1
Else
    If st_pot_club >= 1 And clnt_err = 0 Then
    iii = iii + 1
    End If
End If

If i = num_LastRow And st_pot_club = 0 Then 'delete last row not expert
For end_row = 0 To num_colums
ar_Data(iii, end_row) = ""
Next end_row
End If
Next i

'----------------------------------------------------------------------------------------------------------

Workbooks(actTR).Close
Workbooks(NF).Activate
Sheets(in_data).Activate

ActiveSheet.UsedRange.Cells.ClearContents
end_POS = iii + 1
start_POS = 2

Dim n As Name
For Each n In ActiveSheet.Names
    On Error Resume Next
    n.Delete
    Next n

For t = 0 To num_colums
Cells(1, t + 1) = ar_nmHead(t)
Cells(1, t + 1).Select
'ActiveWorkbook.Names.Add Name:=ar_nmHead(t), RefersTo:="=" & ActiveSheet.Name & "!" & ActiveCell.Address()
ActiveWorkbook.Names.Add Name:=ar_nmHead(t), RefersToR1C1:="=" & ActiveSheet.Name & "!" & "R1" & "C" & t + 1 & ":" & "R" & end_POS & "C" & t + 1
Next t

ActiveSheet.Cells(start_POS, 1).Resize(end_POS - start_POS + 1, num_colums + 1) = ar_Data()
status_head = 1


ActiveWorkbook.Names.Add Name:="SOURCE", RefersToR1C1:="=OFFSET(MBC!R1C1,0,0,COUNTA(MBC!R1C1:R65535C1),COUNTA(MBC!R1C1:R1C255))"
'ActiveWorkbook.Names("SOURCE").Comment = ""

'format???? table
'---------------------------------------------------------------------------------------------------------
 
ActiveWindow.FreezePanes = False
Cells(2, 11).Select
ActiveWindow.FreezePanes = True

 
ActiveWindow.DisplayGridlines = False

'For Each cell In ActiveSheet.UsedRange
    
    With ActiveSheet.UsedRange.Cells.Font
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .Bold = False
    End With
    
    With ActiveSheet.UsedRange.Cells.Interior
    .Pattern = xlNone
    End With

'Next cell


Set lRangeCol = Nothing
Set lRangeH = ActiveSheet.Rows(iii + 1)

For f = iii + 1 To 2 Step -2
Set lRangeCol = Application.Union(lRangeH, ActiveSheet.Rows(f))
Set lRangeH = lRangeCol

Next f
lRangeCol.Select

With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -4.99893185216834E-02
        .PatternTintAndShade = 0
End With

Cells(1, num_colums + 2) = "status_MBC"
For f_c = 2 To end_POS
st_type_MBC = "validated_MBC"
  
    If Cells(f_c, clm_CA_AVG_LTM + 1) < 15 Then
    Rows(f_c).Select
    With Selection.Font
            .Color = -16777024'-4165632
            .TintAndShade = 0
    End With
    st_type_MBC = "CA_LTM<15"
    End If

    If IsEmpty(Cells(f_c, clm_MBC_Status + 1)) And Cells(f_c, clm_CA_AVG_LTM + 1) > 15 Then
    Rows(f_c).Select
    With Selection.Font
            .Color = -11489280
            .Bold = True
    End With
    st_type_MBC = "prospective_MBC"
    End If
    
    If Cells(f_c, clm_type_clnt + 1) = "shop" Or Cells(f_c, clm_type_clnt + 1) = "other" Then
    Rows(f_c).Select
    With Selection.Font
            .Color = -16776961
            .TintAndShade = 0
            .Bold = True
    End With
    st_type_MBC = "Shop"
    End If
    
    If Cells(f_c, clm_status_DN + 1) = "Cls" Then
    Rows(f_c).Select
    With Selection.Font
            .Color = -16776961
            .TintAndShade = 0
            .Bold = False
    End With
    st_type_MBC = "Closed"
    End If
    
    If  isEmpty(Cells(f_c, clm_status_edu_PY + 1)) and isEmpty(Cells(f_c, clm_status_edu_TY + 1)) Then
    Range(cells(f_c, clm_status_edu_alltime), Cells(f_c, clm_status_edu_TY+1)).Select
    
    With Selection.Interior
            .Color = -6279056
            .TintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    End If
    

Cells(f_c, num_colums + 2) = st_type_MBC

Range(Cells(1, 1), Cells(1, num_colums + 2)).Select
With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 6250335
End With
With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .Bold = True
End With

Next f_c





'---------------------------------------------------------------------------------------------------------


With Application
.ScreenUpdating = True
.Calculation = xlCalculationAutomatic
.EnableEvents = True
.DisplayStatusBar = True
.DisplayAlerts = True
End With
    
End Sub



