Declare PtrSafe Function SHCreateDirectoryEx Lib "shell32" Alias "SHCreateDirectoryExA" (ByVal hwnd As Long, ByVal pszPath As String, ByVal psa As Any) As Long
                                      
                                    
                                      
Sub CreateFolderWithSubfolders(ByVal PatchCreateFolder$)
 
   If Len(Dir(PatchCreateFolder$, vbDirectory)) = 0 Then  
       SHCreateDirectoryEx Application.hwnd, PatchCreateFolder$, ByVal 0&   
   End If
End Sub

Function Replace_symbols(ByVal txt As String) As String
    St$ = "~!@/\#$%^&*=|`-"""
    For i% = 1 To Len(St$)
        txt = Replace(txt, Mid(St$, i, 1), "_")
    Next
    Replace_symbols = txt
End Function


Sub razbibka()

Dim arr1()
Dim arr2()
Dim num_row(2) , ar_Split()
Dim j As Long
Dim i As Long
Dim iColumns As Integer
Dim f_ar_a, f_b, f_c, f_d, f_ar_i, f_r, LastRow,  colum As Integer
Dim lRangeDel As Range
Dim lRangeH As Range
Dim nm_Mreg, nm_findVAl, NF , val_Cell_This, val_Cell_Previous As String

'---------------------------------------------------------------------------------------------------------- 
With Application
.Calculation = xlCalculationManual
.DisplayAlerts = False
.ScreenUpdating = False
End With

NF = ActiveWorkbook.Name
'--------------------------------------------------------------------------------------------------------- 
'uniq split type
'---------------------------------------------------------------------------------------------------------
LastRow = ActiveSheet.UsedRange.Row + ActiveSheet.UsedRange.Rows.Count - 1
ReDim ar_Split(LastRow - 1, 3)

For f_ar_a = 0 to 2
val_Cell_Previous = 0
f_ar_i = 0
colum = f_ar_a + 3 

For f_b = 2 to LastRow
val_Cell_This = cells(f_b, colum)  
If val_Cell_This <> val_Cell_Previous then
ar_Split(f_ar_i, f_ar_a) = val_Cell_This
f_ar_i =f_ar_i + 1
End if
val_Cell_Previous = val_Cell_This
next f_b

num_row(f_ar_a) = f_ar_i

msgbox(num_row(f_ar_a))
next f_ar_a
'--------------------------------------------------------------------------------------------------------- 

For f_ar_a = 0 to 2
colum = f_ar_a + 3 

For f_b = 0 To num_row(f_ar_a) 

Sheets("Expert").Select
Sheets("Expert").Copy

Set lRangeDel = Nothing
Set lRangeH = ActiveSheet.Rows(65000)
TextToFindArray = ar_Split(f_b, f_ar_a)

   For f_r = LastRow To 2 Step -1
       If TextToFindArray <> Cells(f_r, colum) Then
         Set lRangeDel = Application.Union(lRangeH, ActiveSheet.Rows(f_r))
         Set lRangeH = lRangeDel
        End If
    Next f_r
    
On Error Resume Next
lRangeDel.Delete
		
'Save File 
'--------------------------------------------------------------------------------------------------------- 
nm_Mreg = Trim(Cells(2, 3))
nm_FLSM = Trim(Cells(2, 4))
nm_SREP = Trim(Cells(2, 5))

Select Case f_ar_a
Case 0
nmPath = "\\RUCORPRUWKS0665\Dropbox\For Regions Commercial Team\DR\" & nm_Mreg & "\" & "CLUB_EXPERT\"
nmFile = "slnsEXPERT_" & nm_Mreg & ".xlsx"
Case 1
nmPath = "\\RUCORPRUWKS0665\Dropbox\For Regions Commercial Team\FLSM\" & nm_Mreg & "\"  & nm_FLSM & "\" & "CLUB_EXPERT\" 
nmFile = "slnsEXPERT_" & nm_FLSM & ".xlsx"
Case 2
nmPath = "\\RUCORPRUWKS0665\Dropbox\For Regions Commercial Team\SREP\" & nm_Mreg & "\"  & nm_SREP & "\" & "CLUB_EXPERT\"
nmFile = "slnsEXPERT_" & nm_SREP & ".xlsx"
End Select
CreateFolderWithSubfolders nmPath

ActiveWorkbook.SaveAs Filename:=nmPath & nmFile, _
FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False

ActiveWindow.Close
Workbooks(NF).Activate
'--------------------------------------------------------------------------------------------------------- 

Next f_b
Next f_ar_a

With Application
.Calculation = xlCalculationAutomatic
.DisplayAlerts = True
.ScreenUpdating = True
End With

End Sub



